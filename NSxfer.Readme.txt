
NSxfer - NSIS WinInet transfer plugin
Marius Negru»õiu (marius.negrutiu@gmail.com)
_________________________________________________________________________________________________

NSxfer::Transfer	/NOUNLOAD
					[/PRIORITY prio]
					[/METHOD GET|POST]
					/URL url
					[/LOCAL file|MEMORY|NONE]
					[/HEADERS hdr]
					[/DATA data | /DATAFILE file]
					[/TIMEOUTCONNECT msec] [/TIMEOUTRECONNECT msec]
					[/OPTCONNECTRETRIES count] [/OPTCONNECTTIMEOUT msec] [/OPTRECEIVETIMEOUT msec]
					[/PROXY server] [/PROXYUSER user] [/PROXYPASS pass]
					[/REFERER url]
					/END

Remarks:
	The "Transfer" command will add a download request to the queue.
	The transfer will start as soon as a worker thread becomes available.
	This command will not display any GUI.
	For GUI, check out the "Wait" command.
	
Parameters:
	/NOUNLOAD					| Must be specified, otherwise NSIS will unload NSxfer at runtime
	/PRIORITY					| Priority in queue. Lower value means higher priority. Default is 1000
	/METHOD GET|POST|HEAD|...	| HTTP Method. Default is GET
	/URL url					| HTTP or HTTPS
	/LOCAL file|MEMORY|NONE		| The remote content can be downloaded to either a local file, to memory, or not downloaded at all. Default is NONE
	/HEADERS hdr				| Additional HTTP headers, delimited by CRLF (\r\n)
	/DATA data					| Additional data to be sent as part of the HTTP request
	/DATAFILE file				| Additional data to be sent as part of the HTTP request (read from the specified file)
	/TIMEOUTCONNECT msec		| Keep trying to connect for "msec" milliseconds. Default is 0 (only one attempt to connect is made)
	/TIMEOUTRECONNECT msec		| Keep trying to reconnect for "msec" milliseconds, if the connection drops while downloading. Default is 0 (no attempt to reconnect)
	/OPTCONNECTRETRIES count	| InternetSetOption( INTERNET_OPTION_CONNECT_RETRIES ). Relevant only for remote hosts with multiple IPs!
	/OPTCONNECTTIMEOUT msec		| InternetSetOption( INTERNET_OPTION_CONNECT_TIMEOUT )
	/OPTRECEIVETIMEOUT msec		| InternetSetOption( INTERNET_OPTION_RECEIVE_TIMEOUT )
	/PROXY server				| CERN type proxies (ex: "http=http://my_proxy:my_port"). If Internet Explorer is installed, SOCKS proxies are supported too
	/PROXYUSER user				| Optional username for authenticated proxies
	/PROXYPASS pass				| Optional password for authenticated proxies
	/REFERER url				| Optional referer URL, passed to InternetOpenRequest
	/INTERNETFLAGS flags		| Combination of INTERNET_FLAG_XXX passed to InternetOpenRequest. Default is 0x84082200 (INTERNET_FLAG_NO_CACHE_WRITE|INTERNET_FLAG_IGNORE_CERT_DATE_INVALID|INTERNET_FLAG_NO_COOKIES|INTERNET_FLAG_NO_UI|INTERNET_FLAG_RELOAD)
	/SECURITYFLAGS flags		| Combination of SECURITY_FLAG_XXX passed to InternetSetOption(INTERNET_OPTION_SECURITY_FLAGS). Default is 0x2080 (SECURITY_FLAG_IGNORE_REVOCATION|SECURITY_FLAG_IGNORE_CERT_DATE_INVALID)
	/END						| Must conclude the parameter list, otherwise the NSIS stack will be emptied...

Return:
	[Stack] An unique transfer ID. Useful for querying the status later

Examples:

	; Download to local file
	NSxfer::Transfer /NOUNLOAD /URL "http://live.sysinternals.com/Files/SysinternalsSuite.zip" /LOCAL "$EXEDIR\SysinternalsSuite.zip" /TIMEOUTCONNECT 60000 /TIMEOUTRECONNECT 300000 /END
	Pop $0	; Transfer ID

	; Download to memory, highest priority
	NSxfer::Transfer /NOUNLOAD /PRIORITY 1 /URL "http://live.sysinternals.com/Files/SysinternalsSuite.zip" /LOCAL MEMORY /END
	Pop $0	; Transfer ID

	; Send the HTTP request but don't download the content
	NSxfer::Transfer /NOUNLOAD /URL "http://mydomain.com:800?param1=va1&param2=val2" /LOCAL NONE /END
	Pop $0	; Transfer ID

	; POST a form
	NSxfer::Transfer /NOUNLOAD /METHOD POST /URL "http://httpbin.org/post" /LOCAL "Post.txt" /HEADERS "Content-Type: application/x-www-form-urlencoded" /DATA "user=MY+NAME&pass=MY+PASSWORD" /END
	Pop R0	; Transfer ID
_________________________________________________________________________________________________

NSxfer::Wait		/NOUNLOAD
					[/ID id] [/PRIORITY prio]
					[/MODE SILENT|POPUP|PAGE]
					[/TITLEHWND Wnd] [/STATUSHWND Wnd] [/PROGRESSHWND Wnd]
					[/TITLETEXT Text MultiText] [/STATUSTEXT Text Multitext]
					[/ABORT Title Message]
					/END

Remarks:
	Wait for one or multiple transfers to complete.

	Waiting modes:
	- SILENT					| No GUI is displayed, the call returns when transfer(s) complete(s)
	- POPUP						| Progress is displayed on a popup window
	- PAGE						| Progress is displayed on an installer page (InstFiles or custom). This mode is available only when the installer is visible.
	SILENT and POPUP modes are available at all times, including silent installers.
	PAGE mode requires that the installer is visible, and a page is currently active. In silent installers, PAGE mode is automatically converted to SILENT mode.

	All displayed texts can be customized.
	The plugin automatically chooses between "Text" and "MultiText" based on whether waiting for one/many transfers
	All texts may contain keywords that are automatically replaced at runtime.

	Transfer-specific keywords (must be used in single-transfer texts)
	{ID}						| The transfer ID returned by NSxfer::Transfer
	{STATUS}					| "Waiting", "Downloading" or "Completed" (English only)
	{WININETSTATUS}				| The last status reported by the InternetCallback (http://msdn.microsoft.com/EN-US/library/windows/desktop/aa385121(v=vs.85).aspx)
	{METHOD}					| The HTTP method in use (GET, POST, HEAD, etc.)
	{URL}						| Full URL
	{IP}						| Server's IP address, or an empty string
	{PROXY}						| The proxy server, or an empty string
	{LOCAL}						| The local destination (file path|Memory|None)
	{LOCALFILEDIR}				| The file directory (no name), extracted from the local path
	{LOCALFILENAME}				| The file name (no path), extracted from the local path
	{FILESIZE}					| The remote content length, nicely formatted (ex: "1,3 GB")
	{FILESIZEBYTES}				| The remote content length (can exceed 4GB (32-bit boundary))
	{RECVSIZE}					| The amount of bytes received, nicely formatted (ex: "1,3 GB")
	{RECVSIZEBYTES}				| The amount of bytes received
	{PERCENT}					| Percent (0-100)
	{SPEED}						| Transfer speed (nicely formatted, ex: "1,4 MB/s")
	{SPEEDBYTES}				| Transfer speed (bytes/second)
	{TIMESTART}					| The timestamp when the transfer has started (ex: 2014/10/18 08:24)
	{TIMEELAPSED}				| Amount of time since the transfer has started (ex: 3 min, 2 sec)
	{TIMEREMAINING}				| Estimated amount of time until the transfer will complete (ex: 10 min, 35 sec)

	General keywords:
	{TOTALCOUNT}				| The overall number of transfers (waiting + downloading + completed)
	{TOTALWAITING}				| The number of waiting transfers
	{TOTALACTIVE}				| The number of downloading + completed transfers
	{TOTALDOWNLOADING}			| The number of transfers in progress
	{TOTALCOMPLETED}			| The number of completed transfers
	{TOTALRECVSIZE}				| The amount of bytes received, nicely formatted (ex: "1,3 GB")
	{TOTALRECVSIZEBYTES}		| The amount of bytes received
	{TOTALSPEED}				| The combined speed of transfers in progress (nicely formatted, ex: "1,4 MB/s")
	{TOTALSPEEDBYTES}			| The combined speed of transfers in progress (bytes/second)
	{TOTALTHREADS}				| Worker thread count
	{ORIGINALTITLE}				| The original title text 
	{ORIGINALSTATUS}			| The original status text
	{PLUGINNAME}				| Plugin name ("NSxfer")
	{PLUGINVERSION}				| Plugin version
	{ANIMLINE}					| The classic \|/- animation
	{ANIMDOTS}					| The classic ./../... animation

Parameters:
	/NOUNLOAD					| Must be specified, otherwise NSIS will unload NSxfer at runtime
	/ID id						| Wait for a specific transfer. If not specified, we're waiting for all transfers
	/PRIORITY prio				| Wait for transfers with specific priority. If not specified we're waiting for all transfers
	/MODE						| Wait mode
	/TITLEHWND					| Custom window that displays the Title text
	/STATUSHWND					| Custom window that displays the Status text
	/PROGRESSHWND				| Custom progress bar
	/TITLETEXT Text MultiText	| The Title text. "Text" is displayed when waiting for a single transfer, whereas "MultiText" is displayed when waiting for many transfers. Both texts may contain keywords
	/STATUSTEXT Text MultiText	| The Status text. "Text" is displayed when waiting for a single transfer, whereas "MultiText" is displayed when waiting for many transfers. Both texts may contain keywords
	/ABORT Title Message		| The transfer can be aborted. If Message is not empty, a confirmation box (Yes/No) will be diaplayed. If Message is empty, the transfer will be aborted silently. By default abortion is deactivated
	/END						| Must conclude the parameter list, otherwise the NSIS stack will be emptied...

Return:
	[Stack] Result code. Ignore it!

Examples:
	; Wait for all transfers with priority 2000 (Popup mode)
	NSxfer::Wait \
		/NOUNLOAD /PRIORITY 2000 /MODE POPUP \
		/STATUSTEXT \
			"Received {RECVSIZE}/{FILESIZE} @ {SPEED}, ETA: {TIMEREMAINING}$\n{URL}" \
			"Downloading {TOTALACTIVE}/{TOTALCOUNT} files. Received {TOTALRECVSIZE} @ {TOTALSPEED}" \
		/TITLETEXT \
			"{PERCENT}% - Downloading..." \
			"Downloading {TOTALCOUNT} files..." \
		/ABORT "Abort" "Are your sure?"
_________________________________________________________________________________________________

NSxfer::Abort		/NOUNLOAD
					[/ID id]
					[/PRIORITY prio]
					/END
Remarks:
	Abort one or multiple transfers.
	When aborting a file transfer the received content is not removed. It can be resumed later...
	The caller is responsible for cleaning up unfinished downloads.

Parameters:
	/NOUNLOAD					| Must be specified, otherwise NSIS will unload NSxfer at runtime
	/ID id						| Abort a specific transfer. If not specified, all transfers will be aborted
	/PRIORITY prio				| Abort transfers with specific priority. If not specified, all transfers will be aborted

Return value:
	[Stack] Result code. Ignore it!

Examples:
	; Abort all transfers
	NSxfer::Abort /NOUNLOAD /END

	; Abort all transfers with priority 2000
	NSxfer::Abort /NOUNLOAD /PRIORITY 2000 /END

	; Abort specific transfer
	NSxfer::Abort /NOUNLOAD /ID 5 /END
_________________________________________________________________________________________________

NSxfer::Enumerate [/NOUNLOAD] all|downloading|waiting|completed

Remarks:
	Enumerate the transfers in queue.

Return:
	[Stack] Item count (N)
	[Stack] ID1
	[Stack] ID2
	[Stack] ...
	[Stack] IDn

Example:
	NSxfer::Enumerate /NOUNLOAD all
	Pop $1 ; Count
	${For} $0 1 $1
		Pop $2
		DetailPrint "[$0] Transfer ID = $2"
	${Next}
_________________________________________________________________________________________________

NSxfer::Query	/NOUNLOAD
				TransferID
				[/PRIORITY]
				[/STATUS] [/WININETSTATUS]
				[/METHOD] [/URL] [/IP] [/PROXY] [/LOCAL]
				[/SENTHEADERS] [/RECVHEADERS]
				[/FILESIZE] [/RECVSIZE] [/PERCENT] [/SPEEDBYTES] [/SPEED]
				[/CONTENT]
				[/TIMEWAITING] [/TIMEDOWNLOADING]
				[/ERRORCODE] [/ERRORTEXT]
				/END

Remarks:
	Query information about a specific transfer ID.

Parameters:
	/NOUNLOAD				| Must be specified, otherwise NSIS will unload NSxfer at runtime
	TransferID				| The transfer ID returned by NSxfer::Transfer
	/PRIORITY				| Transfer priority
	/STATUS					| Transfer status (downloading|waiting|completed)
	/WININETSTATUS			| The last status reported by the InternetCallback (http://msdn.microsoft.com/EN-US/library/windows/desktop/aa385121(v=vs.85).aspx)
	/METHOD					| The HTTP method in use (GET, POST, HEAD, etc.)
	/URL					| Full URL
	/IP						| Server's IP address, or an empty string
	/PROXY					| The proxy server, or an empty string
	/LOCAL					| The local destination (file|MEMORY|NONE)
	/SENTHEADERS			| The raw HTTP headers sent to the server
	/RECVHEADERS			| The raw HTTP headers received from the server
	/FILESIZE				| The remote content length (can exceed 4GB (32-bit boundary))
	/RECVSIZE				| The amount of bytes received so far
	/PERCENT				| Percent (0-100)
	/SPEED					| Transfer speed (nicely formatted, ex: "1,4 MB/s")
	/SPEEDBYTES				| Transfer speed (bytes/second)
	/CONTENT				| Retrieves the remote content (max NSIS_MAX_STRLEN) downloaded to memory. Non-printable characters will be replaced with '.'
	/TIMEWAITING			| Amount of time (milliseconds) spent waiting in queue
	/TIMEDOWNLOADING		| Amount of time (milliseconds) spent transferring
	/ERRORCODE				| Win32 error code, or HTTP status code
	/ERRORTEXT				| The error explained
	/END					| Must conclude the parameter list, otherwise the NSIS stack will be emptied...

Return:
	A value for each parameter, in the same order
	[Stack] Value1
	[Stack] Value2
	[Stack] ...
	[Stack] ValueN

Example:
	NSxfer::Query /NOUNLOAD $ID /STATUS /URL /PERCENT /SPEED /END
	Pop $0	;Status
	Pop $1	;URL
	Pop $2	;Percent
	Pop $3	;Speed
	DetailPrint "Status:$0, URL:$1, Percent:$2, Speed:$3"
_________________________________________________________________________________________________

NSxfer::QueryGlobal /NOUNLOAD
					[/COUNTTOTAL] [/COUNTWAITING] [/COUNTDOWNLOADING] [/COUNTCOMPLETED]
					[/SPEEDBYTES] [/SPEED]
					[/COUNTTHREADS]
					/END

Remarks:
	Query aggregated information about all transfer requests.

Parameters:
	/NOUNLOAD				| Must be specified, otherwise NSIS will unload NSxfer at runtime
	/COUNTTOTAL				| The overall number of transfers (waiting + downloading + completed)
	/COUNTWAITING			| The number of waiting transfers
	/COUNTDOWNLOADING		| The number of transfers in progress
	/COUNTCOMPLETED			| The number of completed transfers
	/SPEEDBYTES				| The combined speed of transfers in progress (bytes/second)
	/SPEED					| The combined speed of transfers in progress (nicely formatted, ex: "1,4 MB/s")
	/COUNTTHREADS			| Worker thread count
	/END					| Must conclude the parameter list, otherwise the NSIS stack will be emptied...

Return:
	A value for each parameter, in the same order
	[Stack] Value1
	[Stack] Value2
	[Stack] ...
	[Stack] ValueN

Example:
	NSxfer::QueryGlobal /NOUNLOAD /COUNTTOTAL /COUNTCOMPLETED /COUNTDOWNLOADING /SPEED /COUNTTHREADS /END
	Pop $R0 ; Total
	Pop $R1 ; Completed
	Pop $R2 ; Downloading
	Pop $R3 ; Speed
	Pop $R4 ; Worker threads

	DetailPrint "Transferring $R1+$R2/$R0 items at $R3 using $R4 worker threads"
_________________________________________________________________________________________________

